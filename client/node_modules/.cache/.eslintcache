[{"C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\index.tsx":"1","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\App.tsx":"3","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\movie-card\\Movie.tsx":"4","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\sidebar\\Sidebar.tsx":"5","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\movie-page\\Movie-page.tsx":"6","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\home\\Home.tsx":"7","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\header\\Header.tsx":"8"},{"size":499,"mtime":1624909792994,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1069,"mtime":1626207690188,"results":"12","hashOfConfig":"10"},{"size":792,"mtime":1626210990145,"results":"13","hashOfConfig":"10"},{"size":405,"mtime":1624912482204,"results":"14","hashOfConfig":"10"},{"size":2747,"mtime":1626210509968,"results":"15","hashOfConfig":"10"},{"size":1080,"mtime":1626206741450,"results":"16","hashOfConfig":"10"},{"size":853,"mtime":1626211732656,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"139fy4u",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\index.tsx",[],["39","40"],"C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\App.tsx",["41","42","43","44","45","46","47"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar/Sidebar';\nimport Movie from './components/movie-card/Movie';\nimport movieJson from './films.json'\nimport MoviePage from './components/movie-page/Movie-page'\nimport axios from 'axios'\nimport Home from './components/home/Home';\nimport Header from './components/header/Header';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\ntype movieItems={\n  \n  id:number,\n  name:string,\n  Synopsis:string,\n  imgsrc:string,\n  rating:number\n}\n\nconst filmJson:string=JSON.stringify(movieJson)\nlet data=JSON.parse(filmJson)\n\n//console.log(data)\n\nexport const App:React.FC=()=>{\n\n  return (\n    <div>\n    \n    <Router>\n    <Header/>\n    <Switch>\n      <Route path=\"/Luca\">\n        <MoviePage name={data[0].name}rating={data[0].rating} synopsis={data[0].SynopsisFull} imgsrc={data[0].imgsrc}/>\n      </Route>\n      <Route path=\"/\">\n        <Home/>\n      </Route>\n    </Switch>\n  </Router>\n  </div>\n  \n  \n  );\n}\n\nexport default App;\n","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\movie-card\\Movie.tsx",["48"],"import React from 'react';\r\nimport \"./card.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\ninterface Props{\r\n    name:string,\r\n    imgsrc?:string,\r\n    rating:number,\r\n    synopsis?:string\r\n}\r\n\r\nconst onclickHandler:React.MouseEventHandler<HTMLDivElement>=(event)=>{\r\n    console.log(\"clicked\")\r\n\r\n\r\n}\r\nexport const Movie:React.FC<Props>=({name,imgsrc,rating,synopsis}) =>{\r\n    return (\r\n        <Link to={`/${name}`}>\r\n            <div className=\"card-container\" onClick={onclickHandler}>\r\n                <img src={imgsrc} alt=\"Movie Image\"/>\r\n                <div className=\"lower-content\">\r\n                    <h1>{`${name} ${rating}`}</h1>\r\n                    <p>{synopsis}</p>\r\n                </div>          \r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default Movie;","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\sidebar\\Sidebar.tsx",[],"C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\movie-page\\Movie-page.tsx",["49"],"import React from 'react';\r\nimport './movieReview.css'\r\n\r\ninterface Props{\r\n    name:string,\r\n    imgsrc?:string,\r\n    rating:number,\r\n    synopsis?:string    \r\n    reviews?:[{\r\n        username:string,\r\n        userRating:number,\r\n        reviewContent:string\r\n    }]\r\n}\r\n\r\nconst colorRatings={\r\n    green:\"#53fc72\",\r\n    amber:\"#fce653\",\r\n    red:\"#ff6254\"\r\n}\r\n\r\n\r\n\r\nconst review=[\r\n    {\r\n    id:0,\r\n    username:\"USER 1\",\r\n    userRating:9,\r\n    ReviewContent: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem eaque natus reprehenderit vero voluptatibus! Ipsum aspernatur illum saepe repudiandae, suscipit ducimus! Non, error animi! Delectus qui voluptatibus quia incidunt aliquid libero, accusantium repellat nulla animi modi ex amet dolor ad accusamus tempore corrupti non quo rerum. Nulla tenetur quisquam perferendis?\"\r\n    },\r\n    {\r\n    id:1,\r\n    username:\"USER 2\",\r\n    userRating:9,\r\n    ReviewContent: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae voluptatibus vitae amet laborum dolor cupiditate quaerat libero neque voluptas eum?\"\r\n    },\r\n    {\r\n    id:2,\r\n    username:\"USER 3\",\r\n    userRating:7,\r\n    ReviewContent: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nam velit voluptatibus nesciunt.\"\r\n    },\r\n]\r\n\r\nexport const MoviePage:React.FC<Props>=({name,imgsrc,rating,synopsis,reviews})=>{\r\n    const colorRating=()=>{\r\n        let color:string=\"\"\r\n        if (rating<3){\r\n            return colorRatings.red\r\n        }else if (rating<6){\r\n            return colorRatings.amber\r\n        }else{\r\n            return colorRatings.green\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"moviePage\">\r\n            <div className=\"movie-image\">\r\n                <img src={imgsrc} alt={`${name} movie poster`} />\r\n            </div>\r\n            <div className=\"rating\">\r\n                <p><span style={{color:colorRating()}}>{rating}</span> /10</p>\r\n            </div>\r\n            <div className=\"Synopsis\">\r\n                <p>{synopsis} </p>\r\n            </div>\r\n            <div className=\"review-container\">\r\n\r\n                {review.map((rev)=>\r\n                    <div className=\"reviews\" key={rev.id}>\r\n                        <div className=\"reviewLeft\">\r\n                            <h3>{rev.username}</h3>\r\n                            <p>{rev.userRating}</p>\r\n                        </div>\r\n                        <div className=\"reviewsRight\">\r\n                            <p>{rev.ReviewContent}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                )}\r\n                \r\n            </div> \r\n            <div className=\"add-review\">\r\n            </div>             \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviePage","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\home\\Home.tsx",["50"],"import React, { useEffect, useState } from 'react';\r\nimport Movie from '../movie-card/Movie';\r\nimport axios from 'axios'\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype movieItems={\r\n  \r\n  id:number,\r\n  name:string,\r\n  Synopsis:string,\r\n  imgsrc:string,\r\n  rating:number\r\n}\r\n\r\n\r\n\r\ninterface Props{\r\n\r\n}\r\nexport const Home:React.FC<Props>=()=> {\r\n\r\n    const [movieData,SetmoveieData]=useState([])\r\n\r\n    const FetchMovieData=()=>{\r\n      console.log(\"Fetching movie data\");\r\n      axios({\r\n        method: 'get',\r\n        url: 'http://127.0.0.1:8000/API/movieData'\r\n    }).then((res)=>{\r\n      SetmoveieData(res.data)\r\n      console.log(res.data)\r\n    })\r\n  }\r\n  \r\n    //On page load fetch the movie data\r\n    useEffect(() => {\r\n      FetchMovieData()\r\n    }, [])\r\n  \r\n  \r\n    return (\r\n        <div className=\"movies-container\">\r\n          {movieData.map((list:movieItems)=>        \r\n              <Movie key={list.id} name={list.name}rating={list.rating} synopsis={list.Synopsis} imgsrc={list.imgsrc}/>\r\n          )}        \r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Home;","C:\\Users\\Thomas\\Documents\\Programming things\\movie-reviews\\client\\src\\components\\header\\Header.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"59","line":1,"column":28,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"60","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":15},{"ruleId":"55","severity":1,"message":"61","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":13},{"ruleId":"55","severity":1,"message":"62","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":13},{"ruleId":"55","severity":1,"message":"63","line":15,"column":3,"nodeType":"57","messageId":"58","endLine":15,"endColumn":7},{"ruleId":"55","severity":1,"message":"64","line":19,"column":6,"nodeType":"57","messageId":"58","endLine":19,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":21,"column":17,"nodeType":"67","endLine":21,"endColumn":54},{"ruleId":"55","severity":1,"message":"68","line":47,"column":13,"nodeType":"57","messageId":"58","endLine":47,"endColumn":25},{"ruleId":"55","severity":1,"message":"63","line":5,"column":9,"nodeType":"57","messageId":"58","endLine":5,"endColumn":13},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Sidebar' is defined but never used.","'Movie' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'movieItems' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'color' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]